
class xopts extends Learner.Options with SFilesDS.Opts with GLM.Opts with ADAGrad.Opts;

val ncats = 10;

def learnMNIST = {
    val opts = new xopts;
    implicit val ec = threadPool(4);
    val ds = new SFilesDS(opts);
  	val nn = new Learner(
        ds,
  	    new GLM(opts), 
  	    null, 
  	    new ADAGrad(opts),
  	    opts);
    (nn, ds, opts)
};

val (nn, ds, opts) = learnMNIST;

val dir = "/data/MNIST8M/parts";
opts.fnames = List(FilesDS.simpleEnum(dir+"/cats%02d.smat.lz4", 1, 0),
                   FilesDS.simpleEnum(dir+"/part%02d.smat.lz4", 1, 0));
opts.nstart = 0;
opts.nend = 70;
opts.order = 0;
opts.lookahead = 2;
opts.featType = 1;
opts.fcounts = icol(10,784);
opts.eltsPerSample = 300;
opts.links = 2*iones(10,1);
opts.targets = mkdiag(ones(10,1)) \ zeros(10, 784);
opts.rmask = zeros(1,10) \ ones(1, 784);
opts.autoReset = false

opts.batchSize = 500;
opts.npasses = 1;
opts.lrate = 0.001;  // for logistic

nn.train

opts.nstart = 71;
opts.nend = 80;
opts.npasses=1;
opts.links = 2*iones(10,1);
nn.model.asInstanceOf[GLM].mylinks <-- opts.links

nn.repredict